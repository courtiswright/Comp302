function foo()
{
}
var bar = foo;
bar(); //will execute the body of foo


function ping(a)
{
	a();
}
ping(bar); //will also execute the body of foo







foo();
function foo()
{
} //can call the function before declaring it, this is valid

VS

foo();
var foo = function() {} //this should not work






function fooMaker()
{
	return function()
	{
		return "foo";
	}
}
var b = fooMaker;
b(); //--> "foo"






function foo(a,b)
{
	return a + b;
}
foo(3);
/* should be an error in most languages
 * in this case, 3 is assigned to a and undefined is assigned to b
 */
foo(3,4,5,6);
/* should also be an error
 * but will just ignore 5 and 6
 * and returns 7
 */

/* Inside a function there is an array that contains all the arguments
 * In this case, arguments[0] == 3;
                          [1] == 4;
                          [2] == 5;
                          [3] == 6;
 */