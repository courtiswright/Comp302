function tailfac(n,m) //m is an accumulator
{
	if (n == 0) return m;
	return tailfac(n - 1, n * m)
}

/* In the first version of factorial, we do the calculation after the recursion.
 * Here, the calculation is done before the recursion
 */

tailfac(5,1)
= tailfac(4, 1*5=5)
= tailfac(3, 5*4 = 20)
...









“head” recursion
f()
{
	f()
	calculation
}


“tail” recusion
f()
{
	calculation
	f()
}
